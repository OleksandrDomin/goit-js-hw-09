{"mappings":"gfACA,IAMIA,EACAC,EACAC,EARJC,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,SACtCC,EAASF,SAASC,cAAc,yBA4BrC,SAASE,EAAcC,EAAUC,GAE/B,IAAMC,EAAeZ,EAAaU,EAAWC,EACvCE,EAAkBH,EAAW,EAEpC,OAAO,IAAII,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GAEzCC,YAAW,WACFH,EACFF,EAAI,CAAEL,SAAUG,EAAiBF,MAAOC,IAExCI,EAAI,CAAEN,SAAUG,EAAiBF,MAAOC,G,GAEzCA,E,IAxCPP,EAAagB,iBAAiB,UAK9B,SAAiBC,GACjBA,EAAIC,iBACFf,EAAOgB,UAAW,EAClBxB,EAAcyB,OAAOH,EAAII,cAAcf,MAAMgB,OAC7C1B,EAAYwB,OAAOH,EAAII,cAAcE,KAAKD,OAC1CzB,EAASuB,OAAOH,EAAII,cAAcG,OAAOF,OAkChBG,EAhCT9B,EAgCqB+B,EAhCT9B,EAgCoB+B,EAhCT9B,EAkCvCkB,YAAW,WACTZ,EAAOgB,UAAW,C,GACjBM,EAAcE,EAAOD,GAJ1B,IAA2BD,EAAYC,EAAWC,EA9BhD,IAAK,IAAIC,EAAI,EAAGA,EAAI/B,EAAQ+B,GAAK,EAAG,CAClBxB,EAAcwB,EAAGhC,GAEzBiC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAC1BR,EAAAiC,OAAOC,QAAQ,qBAAoCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE1D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACpBR,EAAAiC,OAAOI,QAAQ,oBAAmCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst buttonSubmit = document.querySelector('.form');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nbuttonSubmit.addEventListener('submit', onClick)\nlet firstDelay;\nlet delayStep;\nlet amount;\n\nfunction onClick(evt) {\nevt.preventDefault();\n  button.disabled = true;\n  firstDelay  = Number(evt.currentTarget.delay.value);\n  delayStep = Number(evt.currentTarget.step.value);\n  amount = Number(evt.currentTarget.amount.value);\n\nbuttonSubmitDalay(firstDelay, delayStep, amount);\n\n  for (let i = 0; i < amount; i += 1) {\n    const promise = createPromise(i, delayStep);\n\n    promise.then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n};\n\n function createPromise(position, delay)\n {\n   const promiseDelay = firstDelay + position * delay;\n   const promisePosition = position + 1;\n\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.5;\n\n setTimeout(() => {  \n      if (shouldResolve) {\n        res({ position: promisePosition, delay: promiseDelay})\n      } else {\n        rej({ position: promisePosition, delay: promiseDelay})\n      }\n    }, promiseDelay);\n  });\n};\n\nfunction buttonSubmitDalay(firstDelay, delayStep, amount)\n{\n  setTimeout(() => {\n    button.disabled = false;\n  }, firstDelay + (amount*delayStep))\n};\n"],"names":["$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$buttonSubmit","document","querySelector","$ce04d3a99e08e73b$var$button","$ce04d3a99e08e73b$var$createPromise","position","delay","promiseDelay","promisePosition","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","disabled","Number","currentTarget","value","step","amount","firstDelay1","delayStep1","amount1","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.cc47771d.js.map"}