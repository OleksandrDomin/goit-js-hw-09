{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,SACtCC,EAASF,SAASC,cAAc,yBAGtC,IAAIE,EACAC,EACAC,EAuBH,SAASC,EAAcC,EAAUC,GAE/B,MAAMC,EAAeN,EAAaI,EAAWC,EACvCE,EAAkBH,EAAW,EAEpC,OAAO,IAAII,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GAEzCC,YAAW,KACFH,EACFF,EAAI,CAAEL,SAAUG,EAAiBF,MAAOC,IAExCI,EAAI,CAAEN,SAAUG,EAAiBF,MAAOC,GAAc,GAEvDA,EAAa,G,CAxCpBV,EAAamB,iBAAiB,UAK9B,SAAiBC,GACjBA,EAAIC,iBACFlB,EAAOmB,UAAW,EAClBlB,EAAcmB,OAAOH,EAAII,cAAcf,MAAMgB,OAC7CpB,EAAYkB,OAAOH,EAAII,cAAcE,KAAKD,OAC1CnB,EAASiB,OAAOH,EAAII,cAAcG,OAAOF,OAkChBG,EAhCTxB,EAgCqByB,EAhCTxB,EAgCoByB,EAhCTxB,EAkCvCY,YAAW,KACTf,EAAOmB,UAAW,CAAK,GACtBM,EAAcE,EAAOD,GAJ1B,IAA2BD,EAAYC,EAAWC,EA9BhD,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAQyB,GAAK,EAAG,CAClBxB,EAAcwB,EAAG1B,GAEzB2B,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MAC1BX,EAAAmC,OAAOC,QAAQ,qBAAqB1B,QAAeC,MAAU,IAE9D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MACpBX,EAAAmC,OAAOG,QAAQ,oBAAoB5B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst buttonSubmit = document.querySelector('.form');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nbuttonSubmit.addEventListener('submit', onClick)\nlet firstDelay;\nlet delayStep;\nlet amount;\n\nfunction onClick(evt) {\nevt.preventDefault();\n  button.disabled = true;\n  firstDelay  = Number(evt.currentTarget.delay.value);\n  delayStep = Number(evt.currentTarget.step.value);\n  amount = Number(evt.currentTarget.amount.value);\n\nbuttonSubmitDalay(firstDelay, delayStep, amount);\n\n  for (let i = 0; i < amount; i += 1) {\n    const promise = createPromise(i, delayStep);\n\n    promise.then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n};\n\n function createPromise(position, delay)\n {\n   const promiseDelay = firstDelay + position * delay;\n   const promisePosition = position + 1;\n\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.5;\n\n setTimeout(() => {  \n      if (shouldResolve) {\n        res({ position: promisePosition, delay: promiseDelay})\n      } else {\n        rej({ position: promisePosition, delay: promiseDelay})\n      }\n    }, promiseDelay);\n  });\n};\n\nfunction buttonSubmitDalay(firstDelay, delayStep, amount)\n{\n  setTimeout(() => {\n    button.disabled = false;\n  }, firstDelay + (amount*delayStep))\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$buttonSubmit","document","querySelector","$47d4ff9957288465$var$button","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","promiseDelay","promisePosition","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","disabled","Number","currentTarget","value","step","amount","firstDelay1","delayStep1","amount1","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.2712d872.js.map"}